---
# Creating a role for consuming secrets
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: conjur-demo-allow-to-read-secrets
  namespace: conjur-jwt
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: [ "get", "update" ]
---
# Binding the role to the SA
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  namespace: conjur-jwt
  name: conjur-demo-allow-to-read-secrets-binding
subjects:
  - kind: ServiceAccount
    namespace: conjur-jwt
    name: conjur-demo-acct
roleRef:
  kind: Role
  apiGroup: rbac.authorization.k8s.io
  name: conjur-demo-allow-to-read-secrets
---
# Mapping conjur variables to a k8s secrets map
apiVersion: v1
kind: Secret
metadata:
  name: conjur-demo-credentials
  namespace: conjur-jwt
type: Opaque
stringData:
  placeholder: dummy
  conjur-map: |-   
    secret4: data/kubernetes/applications/safe/secret4
    secret8: data/kubernetes/applications/safe/secret8
---
# Deployment for Conjur secrets provider - push to secrets mode as init container
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: conjur-push-to-kubernetes-secrets
  name: demo-init-container-kubernetes-secrets-jwt
  namespace: conjur-jwt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: conjur-push-to-kubernetes-secrets
  template:
    metadata:
      labels:
        app: conjur-push-to-kubernetes-secrets
      annotations:
        # Secrets Provider configuration
        conjur.org/container-mode: init
    spec:
      serviceAccountName: conjur-demo-acct
      containers:
      # Our demo application
      - name: demo-application
        image: assafhazan/push-to-k8s-secrets:latest
        imagePullPolicy: IfNotPresent
        # Mapping to the secrets
        env:
          - name: SECRET4
            valueFrom:
              secretKeyRef:
                name: conjur-demo-credentials
                key: secret4
          - name: SECRET8
            valueFrom:
              secretKeyRef:
                name: conjur-demo-credentials
                key: secret8
      # Secrets Provider in Init Container mode
      initContainers:
      - name: init-container-push-to-secrets
        image: 'cyberark/secrets-provider-for-k8s:latest'
        imagePullPolicy: IfNotPresent
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: K8S_SECRETS
          value: conjur-demo-credentials
        - name: SECRETS_DESTINATION
          value: k8s_secrets
        envFrom:
        - configMapRef:
            name: conjur-connect
        volumeMounts:
          - name: podinfo
            mountPath: /conjur/podinfo
      volumes:
        - name: podinfo
          downwardAPI:
            items:
              - path: "annotations"
                fieldRef:
                  fieldPath: metadata.annotations
