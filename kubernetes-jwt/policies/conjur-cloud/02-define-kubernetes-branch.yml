---
# Load policy into data/kubernetes branch
# This policy defines the demo branch kubernetes

- !policy
  id: applications
  owner: !group admins

# applications/jwt is a layer that will aggregate permissions for all kubernetes applications that want to use JWT to consume Conjur secrets
- !layer
  id: applications/jwt
  owner: !group admins

# create secrets
- !policy
  id: applications/safe
  owner: !group admins
  body:
  - &safe1-secrets
    - !variable
      id: secret1
      owner: !group ../../admins
    - !variable
      id: secret2
      owner: !group ../../admins
    - !variable
      id: secret3
      owner: !group ../../admins
    - !variable
      id: secret4
      owner: !group ../../admins
    - !variable
      id: secret5
      owner: !group ../../admins
    - !variable
      id: secret6
      owner: !group ../../admins
    - !variable
      id: secret7
      owner: !group ../../admins
    - !variable
      id: secret8
      owner: !group ../../admins
    - !variable
      id: messenger
      owner: !group ../../admins

 # Allow applications/jwt layer to consume the secrets we have created
  - !permit
    role: !layer ../jwt
    privileges: [ read, execute ]
    resource: *safe1-secrets

# Create the JWT identity that we will use to authenticate to Conjur 
- !host
  id: applications/system:serviceaccount:conjur-jwt:conjur-demo-acct
  owner: !group admins
  annotations:
    authn/api-key: true
    authn-jwt/k8s-cluster1/kubernetes.io/namespace: conjur-jwt
    authn-jwt/k8s-cluster1/kubernetes.io/serviceaccount/name: conjur-demo-acct

# Add the host we have created to the layer 
- !grant
  roles:
    - !layer applications/jwt
  members:
    - !host applications/system:serviceaccount:conjur-jwt:conjur-demo-acct

