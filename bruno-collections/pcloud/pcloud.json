{
  "name": "PCloud",
  "version": "1",
  "items": [
    {
      "type": "folder",
      "name": "Generate Secret",
      "items": [
        {
          "type": "http",
          "name": "1 - Authenticate to Identity Platform",
          "seq": 1,
          "request": {
            "url": "https://{{identityURL}}/oauth2/platformtoken",
            "method": "POST",
            "headers": [],
            "body": {
              "mode": "formUrlEncoded",
              "formUrlEncoded": [
                {
                  "name": "grant_type",
                  "value": "client_credentials",
                  "enabled": true
                },
                {
                  "name": "client_id",
                  "value": "{{clientID}}",
                  "enabled": true
                },
                {
                  "name": "client_secret",
                  "value": "{{clientSecret}}",
                  "enabled": true
                }
              ],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"should be able to login\", function() {\n  const data = res.getBody();\n  expect(res.getStatus()).to.equal(200);\n});\n\ntest(\"should receive the token\", function() {\n  const data = res.getBody();\n  expect(data.access_token).to.be.a('string');\n  bru.setEnvVar(\"identityToken\", data.access_token);\n});",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "2 - Get Accounts",
          "seq": 2,
          "request": {
            "url": "https://{{pCloudURL}}/PasswordVault/API/Accounts/",
            "method": "GET",
            "headers": [],
            "body": {
              "mode": "json",
              "json": "",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "{{identityToken}}"
              }
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "function findIdByName(array, nameValue) {\n  const item = array.find(item => item.name === nameValue);\n  return item ? item.id : null;\n}\n\ntest(\"valid request status\", function() {\n  const data = res.getBody();\n  expect(res.getStatus()).to.equal(200);\n});\n\ntest(\"should receive account\", function() {\n  const data = res.getBody();\n  const idResult = findIdByName(data.value, bru.getEnvVar(\"accountName\"));\n  expect(idResult).to.be.a('string');\n  bru.setEnvVar(\"accountID\", idResult);\n});",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "3 - Retrieve Secret",
          "seq": 3,
          "request": {
            "url": "https://{{pCloudURL}}/PasswordVault/API/Accounts/{{accountID}}/Secret/Retrieve",
            "method": "POST",
            "headers": [],
            "body": {
              "mode": "json",
              "json": "{\n  \"reason\" :\"Demo\"\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "{{identityToken}}"
              }
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"valid request status\", function() {\n  const data = res.getBody();\n  expect(res.getStatus()).to.equal(200);\n});\n\ntest(\"should receive the account\", function() {\n  const data = res.getBody();\n  expect(data).to.be.a('string');\n  bru.setEnvVar(\"oldPassword\", data);\n});",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "4 - Generate Secret",
          "seq": 4,
          "request": {
            "url": "https://{{pCloudURL}}/PasswordVault/API/Accounts/{{accountID}}/Secret/Generate",
            "method": "POST",
            "headers": [],
            "body": {
              "mode": "json",
              "json": "",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "{{identityToken}}"
              }
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"valid request status\", function() {\n  const data = res.getBody();\n  expect(res.getStatus()).to.equal(200);\n});\n\ntest(\"should receive the account\", function() {\n  const data = res.getBody();\n  expect(data.access_token).to.be.a('string');\n  bru.setEnvVar(\"newPassword\", data.Password);\n});",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "5 - Update Account",
          "seq": 5,
          "request": {
            "url": "https://{{pCloudURL}}/PasswordVault/API/Accounts/{{accountID}}/Password/Update",
            "method": "POST",
            "headers": [],
            "body": {
              "mode": "json",
              "json": "{\n  \"ChangeEntireGroup\": true,\n  \"NewCredentials\": \"{{newPassword}}\"\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "{{identityToken}}"
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "9PsYgeoOKbtRJZLpFVG1V"
              }
            ],
            "tests": "// ",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "Manage Account",
      "items": [
        {
          "type": "http",
          "name": "1 - Authenticate to Identity Platform",
          "seq": 1,
          "request": {
            "url": "https://{{identityURL}}/oauth2/platformtoken",
            "method": "POST",
            "headers": [],
            "body": {
              "mode": "formUrlEncoded",
              "formUrlEncoded": [
                {
                  "name": "grant_type",
                  "value": "client_credentials",
                  "enabled": true
                },
                {
                  "name": "client_id",
                  "value": "{{clientID}}",
                  "enabled": true
                },
                {
                  "name": "client_secret",
                  "value": "{{clientSecret}}",
                  "enabled": true
                }
              ],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"should be able to login\", function() {\n  const data = res.getBody();\n  expect(res.getStatus()).to.equal(200);\n});\n\ntest(\"should receive the token\", function() {\n  const data = res.getBody();\n  expect(data.access_token).to.be.a('string');\n  bru.setEnvVar(\"identityToken\", data.access_token);\n});",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "2 - Create Account",
          "seq": 2,
          "request": {
            "url": "https://{{pCloudURL}}/PasswordVault/API/Accounts",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"safeName\": \"{{safeName}}\",\n  \"platformId\": \"{{platformId}}\",\n  \"username\": \"{{username}}\",\n  \"secretType\": \"{{secretType}}\",\n  \"secret\": \"{{secret}}\"\n}\n",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "{{identityToken}}"
              }
            },
            "script": {},
            "vars": {
              "req": [
                {
                  "name": "safeName",
                  "value": "New-Safe",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "platformId",
                  "value": "PostgreSQL",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "username",
                  "value": "reception",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "secretType",
                  "value": "password",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "secret",
                  "value": "vet_123456",
                  "enabled": true,
                  "local": false
                }
              ]
            },
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "WpsqW6lwOJUbpB5g81kgQ"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "3a - Get Accounts",
          "seq": 3,
          "request": {
            "url": "https://{{pCloudURL}}/PasswordVault/API/Accounts/",
            "method": "GET",
            "headers": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "{{identityToken}}"
              }
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "function findIdByNameAndSafe(array, nameValue, safeValue) {\n  const item = array.find(item => item.name === nameValue && item.safeName === safeValue);\n  return item ? item.id : null;\n}\ntest(\"valid request status\", function() {\n  const data = res.getBody();\n  expect(res.getStatus()).to.equal(200);\n});\n\ntest(\"should receive account\", function() {\n  const data = res.getBody();\n  const idResult = findIdByNameAndSafe(data.value, bru.getVar(\"accountName\"), bru.getVar(\"safeName\"));\n  expect(idResult).to.be.a('string');\n  bru.setEnvVar(\"accountID\", idResult);\n});",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "3b - Update Account Properties",
          "seq": 4,
          "request": {
            "url": "https://{{pCloudURL}}/PasswordVault/API/Accounts/{{accountID}}",
            "method": "PATCH",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "[\n  {\n  \"op\": \"replace\",\n  \"path\": \"/platformId\",\n  \"value\": \"{{platformId}}\"\n },\n {\n  \"op\": \"replace\",\n  \"path\": \"/username\",\n  \"value\": \"{{username}}\"\n }\n]\n",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "{{identityToken}}"
              }
            },
            "script": {},
            "vars": {
              "req": [
                {
                  "name": "safeName",
                  "value": "New-Safe",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "platformId",
                  "value": "PostgreSQL",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "username",
                  "value": "reception-updated",
                  "enabled": true,
                  "local": false
                }
              ]
            },
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "GiQkUyj0MBRBiLyhd1NaP"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "4a - Get Accounts",
          "seq": 5,
          "request": {
            "url": "https://{{pCloudURL}}/PasswordVault/API/Accounts/",
            "method": "GET",
            "headers": [],
            "body": {
              "mode": "json",
              "json": "",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "{{identityToken}}"
              }
            },
            "script": {},
            "vars": {
              "req": [
                {
                  "name": "accountName",
                  "value": "Database-PostgreSQL-reception",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "safeName",
                  "value": "New-Safe",
                  "enabled": true,
                  "local": false
                }
              ]
            },
            "assertions": [],
            "tests": "function findIdByNameAndSafe(array, nameValue, safeValue) {\n  const item = array.find(item => item.name === nameValue && item.safeName === safeValue);\n  return item ? item.id : null;\n}\ntest(\"valid request status\", function() {\n  const data = res.getBody();\n  expect(res.getStatus()).to.equal(200);\n});\n\ntest(\"should receive account\", function() {\n  const data = res.getBody();\n  const idResult = findIdByNameAndSafe(data.value, bru.getVar(\"accountName\"), bru.getVar(\"safeName\"));\n  expect(idResult).to.be.a('string');\n  bru.setEnvVar(\"accountID\", idResult);\n});",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "4b - Delete Account",
          "seq": 6,
          "request": {
            "url": "https://{{pCloudURL}}/PasswordVault/API/Accounts/{{accountID}}",
            "method": "DELETE",
            "headers": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "{{identityToken}}"
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 204",
                "enabled": true,
                "uid": "hIEpQvE0atJCRjIWqBpzN"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "Manage Application",
      "items": [
        {
          "type": "http",
          "name": "1 - Authenticate to Identity Platform",
          "seq": 1,
          "request": {
            "url": "https://{{identityURL}}/oauth2/platformtoken",
            "method": "POST",
            "headers": [],
            "body": {
              "mode": "formUrlEncoded",
              "formUrlEncoded": [
                {
                  "name": "grant_type",
                  "value": "client_credentials",
                  "enabled": true
                },
                {
                  "name": "client_id",
                  "value": "{{clientID}}",
                  "enabled": true
                },
                {
                  "name": "client_secret",
                  "value": "{{clientSecret}}",
                  "enabled": true
                }
              ],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"should be able to login\", function() {\n  const data = res.getBody();\n  expect(res.getStatus()).to.equal(200);\n});\n\ntest(\"should receive the token\", function() {\n  const data = res.getBody();\n  expect(data.access_token).to.be.a('string');\n  bru.setEnvVar(\"identityToken\", data.access_token);\n});",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "2 - Create Application",
          "seq": 2,
          "request": {
            "url": "https://{{pCloudURL}}/PasswordVault/WebServices/PIMServices.svc/Applications",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"application\": {\n    \"AppID\": \"{{appID}}\",\n    \"Description\": \"{{description}}\",\n    \"Location\": \"\\\\Applications\"\n  }\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "{{identityToken}}"
              }
            },
            "script": {},
            "vars": {
              "req": [
                {
                  "name": "appID",
                  "value": "myAppID",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "description",
                  "value": "Demo Application",
                  "enabled": true,
                  "local": false
                }
              ]
            },
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 201",
                "enabled": true,
                "uid": "J9De3X0GJVXbehbC2KqdA"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "3 - Get Applications",
          "seq": 3,
          "request": {
            "url": "https://{{pCloudURL}}/PasswordVault/WebServices/PIMServices.svc/Applications",
            "method": "GET",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"application\": {\n    \"AppID\": \"{{appID}}\",\n    \"Description\": \"{{description}}\",\n    \"Location\": \"{{location}}\"\n  }\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "{{identityToken}}"
              }
            },
            "script": {},
            "vars": {},
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "mbYrEiACfCjcoTG3I2gEa"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "4 - Delete Application",
          "seq": 4,
          "request": {
            "url": "https://{{pCloudURL}}/PasswordVault/WebServices/PIMServices.svc/Applications/{{appID}}",
            "method": "DELETE",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"application\": {\n    \"AppID\": \"{{appID}}\",\n    \"Description\": \"{{description}}\",\n    \"Location\": \"{{location}}\"\n  }\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "{{identityToken}}"
              }
            },
            "script": {},
            "vars": {
              "req": [
                {
                  "name": "appID",
                  "value": "myAppID",
                  "enabled": true,
                  "local": false
                }
              ]
            },
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "kmhlI2XXSufYm0YgUbRFb"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "Manage Safe",
      "items": [
        {
          "type": "http",
          "name": "1 - Authenticate to Identity Platform",
          "seq": 1,
          "request": {
            "url": "https://{{identityURL}}/oauth2/platformtoken",
            "method": "POST",
            "headers": [],
            "body": {
              "mode": "formUrlEncoded",
              "formUrlEncoded": [
                {
                  "name": "grant_type",
                  "value": "client_credentials",
                  "enabled": true
                },
                {
                  "name": "client_id",
                  "value": "{{clientID}}",
                  "enabled": true
                },
                {
                  "name": "client_secret",
                  "value": "{{clientSecret}}",
                  "enabled": true
                }
              ],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"should be able to login\", function() {\n  const data = res.getBody();\n  expect(res.getStatus()).to.equal(200);\n});\n\ntest(\"should receive the token\", function() {\n  const data = res.getBody();\n  expect(data.access_token).to.be.a('string');\n  bru.setEnvVar(\"identityToken\", data.access_token);\n});",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "2 - Create Safe",
          "seq": 2,
          "request": {
            "url": "https://{{pCloudURL}}/PasswordVault/API/Safes",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"safeName\": \"{{safeName}}\",\n  \"description\": \"{{description}}\"\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "{{identityToken}}"
              }
            },
            "script": {},
            "vars": {
              "req": [
                {
                  "name": "safeName",
                  "value": "New-Safe",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "description",
                  "value": "Description of the new safe",
                  "enabled": true,
                  "local": false
                }
              ]
            },
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "2pP5K3U7ZshKiuK39iiSJ"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "3 - Update Safe Member Permissions",
          "seq": 3,
          "request": {
            "url": "https://{{pCloudURL}}/PasswordVault/API/Safes/{{safeName}}/Members",
            "method": "POST",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"memberName\": \"{{memberName}}\",\n  \"memberType\": \"{{memberType}}\",\n  \"permissions\": {\n    \"UseAccounts\": {{useAccounts}},\n    \"RetrieveAccounts\": {{retrieveAccounts}},\n    \"ListAccounts\": {{listAccounts}},\n    \"AddAccounts\": {{addAccounts}},\n    \"UpdateAccountContent\": {{updateAccountContent}},\n    \"UpdateAccountProperties\": {{updateAccountProperties}},\n    \"InitiateCPMAccountManagementOperations\": {{initiateCPMAccountManagementOperations}},\n    \"SpecifyNextAccountContent\": {{specifyNextAccountContent}},\n    \"RenameAccounts\": {{renameAccounts}},\n    \"DeleteAccounts\": {{deleteAccounts}},\n    \"UnlockAccounts\": {{unlockAccounts}},\n    \"ManageSafe\": {{manageSafe}},\n    \"ManageSafeMembers\": {{manageSafeMembers}},\n    \"BackupSafe\": {{backupSafe}},\n    \"ViewAuditLog\": {{viewAuditLog}},\n    \"ViewSafeMembers\": {{viewSafeMembers}},\n    \"AccessWithoutConfirmation\": {{accessWithoutConfirmation}},\n    \"CreateFolders\": {{createFolders}},\n    \"DeleteFolders\": {{deleteFolders}},\n    \"MoveAccountsAndFolders\": {{moveAccountsAndFolders}}\n  }\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "{{identityToken}}"
              }
            },
            "script": {},
            "vars": {
              "req": [
                {
                  "name": "safeName",
                  "value": "New-Safe",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "memberName",
                  "value": "assaf@assaflab",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "memberType",
                  "value": "User",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "useAccounts",
                  "value": "true",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "retrieveAccounts",
                  "value": "true",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "listAccounts",
                  "value": "true",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "addAccounts",
                  "value": "true",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "updateAccountContent",
                  "value": "true",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "updateAccountProperties",
                  "value": "true",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "initiateCPMAccountManagementOperations",
                  "value": "true",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "specifyNextAccountContent",
                  "value": "true",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "renameAccounts",
                  "value": "true",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "deleteAccounts",
                  "value": "true",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "unlockAccounts",
                  "value": "true",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "manageSafe",
                  "value": "true",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "manageSafeMembers",
                  "value": "true",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "backupSafe",
                  "value": "true",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "viewAuditLog",
                  "value": "true",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "viewSafeMembers",
                  "value": "true",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "accessWithoutConfirmation",
                  "value": "true",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "createFolders",
                  "value": "true",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "deleteFolders",
                  "value": "true",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "moveAccountsAndFolders",
                  "value": "true",
                  "enabled": true,
                  "local": false
                }
              ]
            },
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "odwp5y4CqraE37C3qlKAn"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "4 - Remove Safe Member",
          "seq": 4,
          "request": {
            "url": "https://{{pCloudURL}}/PasswordVault/API/Safes/{{safeName}}/Members/{{memberName}}",
            "method": "DELETE",
            "headers": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "{{identityToken}}"
              }
            },
            "script": {},
            "vars": {
              "req": [
                {
                  "name": "safeName",
                  "value": "New-Safe",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "memberName",
                  "value": "assaf@assaflab",
                  "enabled": true,
                  "local": false
                }
              ]
            },
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 204",
                "enabled": true,
                "uid": "eRnDY4zmku4gsJ2I5aCwK"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "5 - Review Safe Permissions",
          "seq": 5,
          "request": {
            "url": "https://{{pCloudURL}}/PasswordVault/API/Safes/{{safeName}}/Members",
            "method": "GET",
            "headers": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "{{identityToken}}"
              }
            },
            "script": {},
            "vars": {
              "req": [
                {
                  "name": "safeName",
                  "value": "New-Safe",
                  "enabled": true,
                  "local": false
                }
              ]
            },
            "assertions": [],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "6 - Update Safe",
          "seq": 6,
          "request": {
            "url": "https://{{pCloudURL}}/PasswordVault/API/Safes/{{safeName}}",
            "method": "PUT",
            "headers": [
              {
                "name": "Content-Type",
                "value": "application/json",
                "enabled": true
              }
            ],
            "body": {
              "mode": "json",
              "json": "{\n  \"SafeName\": \"{{safeName}}\",\n  \"description\":\"{{safeDescription}}\",\n  \"numberOfVersionsRetention\": {{numberOfVersionsRetention}},\n  \"numberOfDaysRetention\": {{numberOfDaysRetention}}\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "{{identityToken}}"
              }
            },
            "script": {},
            "vars": {
              "req": [
                {
                  "name": "safeName",
                  "value": "New-Safe",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "safeDescription",
                  "value": "Updated Safe description",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "numberOfVersionsRetention",
                  "value": "null",
                  "enabled": true,
                  "local": false
                },
                {
                  "name": "numberOfDaysRetention",
                  "value": "1",
                  "enabled": true,
                  "local": false
                }
              ]
            },
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 200",
                "enabled": true,
                "uid": "xYjZ8gXPAHiAgOe6bDBHP"
              }
            ],
            "tests": "",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "7 - Delete Safe",
          "seq": 7,
          "request": {
            "url": "https://{{pCloudURL}}/PasswordVault/API/Safes/{{safeName}}",
            "method": "DELETE",
            "headers": [],
            "body": {
              "mode": "none",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "{{identityToken}}"
              }
            },
            "script": {},
            "vars": {
              "req": [
                {
                  "name": "safeName",
                  "value": "New-Safe",
                  "enabled": true,
                  "local": false
                }
              ]
            },
            "assertions": [
              {
                "name": "res.status",
                "value": "eq 204",
                "enabled": true,
                "uid": "z6e6ZacOh3ohaLY8qcy26"
              }
            ],
            "tests": "",
            "query": []
          }
        }
      ]
    },
    {
      "type": "folder",
      "name": "Retrieve Secret",
      "items": [
        {
          "type": "http",
          "name": "1 - Authenticate to Identity Platform",
          "seq": 1,
          "request": {
            "url": "https://{{identityURL}}/oauth2/platformtoken",
            "method": "POST",
            "headers": [],
            "body": {
              "mode": "formUrlEncoded",
              "formUrlEncoded": [
                {
                  "name": "grant_type",
                  "value": "client_credentials",
                  "enabled": true
                },
                {
                  "name": "client_id",
                  "value": "{{clientID}}",
                  "enabled": true
                },
                {
                  "name": "client_secret",
                  "value": "{{clientSecret}}",
                  "enabled": true
                }
              ],
              "multipartForm": []
            },
            "auth": {
              "mode": "none",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": ""
              }
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"should be able to login\", function() {\n  const data = res.getBody();\n  expect(res.getStatus()).to.equal(200);\n});\n\ntest(\"should receive the token\", function() {\n  const data = res.getBody();\n  expect(data.access_token).to.be.a('string');\n  bru.setEnvVar(\"identityToken\", data.access_token);\n});",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "2 - Get Accounts",
          "seq": 2,
          "request": {
            "url": "https://{{pCloudURL}}/PasswordVault/API/Accounts/",
            "method": "GET",
            "headers": [],
            "body": {
              "mode": "json",
              "json": "",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "{{identityToken}}"
              }
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "function findIdByName(array, nameValue) {\n  const item = array.find(item => item.name === nameValue);\n  return item ? item.id : null;\n}\n\ntest(\"valid request status\", function() {\n  const data = res.getBody();\n  expect(res.getStatus()).to.equal(200);\n});\n\ntest(\"should receive account\", function() {\n  const data = res.getBody();\n  const idResult = findIdByName(data.value, bru.getEnvVar(\"accountName\"));\n  expect(idResult).to.be.a('string');\n  bru.setEnvVar(\"accountID\", idResult);\n});",
            "query": []
          }
        },
        {
          "type": "http",
          "name": "3 - Retrieve Secret",
          "seq": 3,
          "request": {
            "url": "https://{{pCloudURL}}/PasswordVault/API/Accounts/{{accountID}}/Secret/Retrieve",
            "method": "POST",
            "headers": [],
            "body": {
              "mode": "json",
              "json": "{\n  \"reason\" :\"Demo\"\n}",
              "formUrlEncoded": [],
              "multipartForm": []
            },
            "auth": {
              "mode": "bearer",
              "basic": {
                "username": "",
                "password": ""
              },
              "bearer": {
                "token": "{{identityToken}}"
              }
            },
            "script": {},
            "vars": {},
            "assertions": [],
            "tests": "test(\"valid request status\", function() {\n  const data = res.getBody();\n  expect(res.getStatus()).to.equal(200);\n});\n\ntest(\"should receive the account\", function() {\n  const data = res.getBody();\n  expect(data).to.be.a('string');\n  bru.setEnvVar(\"oldPassword\", data);\n});",
            "query": []
          }
        }
      ]
    }
  ],
  "activeEnvironmentUid": "alzfBbeYFTvqlS8YMtISW",
  "environments": [
    {
      "variables": [
        {
          "name": "identityURL",
          "value": "assaflab.id.cyberark.cloud",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "pCloudURL",
          "value": "assaf-lab.privilegecloud.cyberark.cloud",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "clientID",
          "value": "assaf-sa@assaflab",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "accountName",
          "value": "Misc-SampleGroup",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "clientSecret",
          "value": "",
          "enabled": true,
          "secret": true,
          "type": "text"
        },
        {
          "name": "identityToken",
          "value": "",
          "enabled": true,
          "secret": true,
          "type": "text"
        },
        {
          "name": "accountID",
          "value": "",
          "enabled": true,
          "secret": true,
          "type": "text"
        },
        {
          "name": "oldPassword",
          "value": "",
          "enabled": true,
          "secret": true,
          "type": "text"
        },
        {
          "name": "newPassword",
          "value": "",
          "enabled": true,
          "secret": true,
          "type": "text"
        }
      ],
      "name": "Assaf Lab"
    },
    {
      "variables": [
        {
          "name": "identityURL",
          "value": "aay4720.id.cyberark.cloud",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "pCloudURL",
          "value": "xenith.privilegecloud.cyberark.cloud",
          "enabled": true,
          "secret": false,
          "type": "text"
        },
        {
          "name": "accountID",
          "value": "",
          "enabled": true,
          "secret": true,
          "type": "text"
        },
        {
          "name": "accessToken",
          "value": "",
          "enabled": true,
          "secret": true,
          "type": "text"
        },
        {
          "name": "newPassword",
          "value": "",
          "enabled": true,
          "secret": true,
          "type": "text"
        },
        {
          "name": "oldPassword",
          "value": "",
          "enabled": true,
          "secret": true,
          "type": "text"
        }
      ],
      "name": "Xenith"
    }
  ]
}