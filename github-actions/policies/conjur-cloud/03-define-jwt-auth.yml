---
# Load policy into conjur/authn-jwt branch
# This policy defines a JWT authenticator
- !policy
  id: github1
  owner: !group /data/github/admins
  body:
  - !webservice

  # Uncomment one of following variables depending on the public availability
  # If the service is publicly available, uncomment 'jwks-uri'.
  # If the service is not available, uncomment 'public-keys'

  - !variable
    id: jwks-uri

  # - !variable
  #  id: public-keys

  # This variable tells Conjur which claim in the JWT to use to determine the conjur host identity.
  - !variable
    id: token-app-property

  # This variable is used with token-app-property. This variable will hold the conjur policy path that contains the conjur host identity found by looking at the claim entered in token-app-property.
  - !variable
    id: identity-path

  # Uncomment ca-cert if the JWKS website cert isn't trusted by conjur

  # - !variable
  #   id: ca-cert

  # This variable contains what "iss" in the JWT.
  - !variable
    id: issuer
  
  # This variable contains what "aud" is the JWT.
  # - !variable
  #  id: audience

  #In this example, "enforced-claims" is set to "workflow,repository"
  #Please refer to README.md for detailed policy and commands
  - !variable
    id: enforced-claims
  
  - !permit
    role: !layer ../../../data/github/apps/jwt
    privilege: [ read, authenticate ]
    resource: !webservice

 # Health check end-point
  - !webservice
        id: status

  # Permit github admins group to query the health check end-point
  - !permit
      role: !group ../../../data/github/admins
      privilege: [ read ]
      resource: !webservice status